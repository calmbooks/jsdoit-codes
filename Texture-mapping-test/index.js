// Generated by CoffeeScript 1.4.0
(function() {
  var _this = this,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function(win, doc) {
    var CANVAS_H, CANVAS_W, DEBUG, IMAGE_PATH, Main, ctx, cvs, texture;
    IMAGE_PATH = "http://jsrun.it/assets/6/C/1/P/6C1Pr.png";
    CANVAS_W = 465;
    CANVAS_H = 465;
    cvs = doc.getElementById("c");
    ctx = cvs.getContext("2d");
    cvs.width = CANVAS_W;
    cvs.height = CANVAS_H;
    texture = new Image();
    DEBUG = true;
    Main = (function() {

      Main.prototype.HORIZONTAL_N = 3;

      Main.prototype.VERTICAL_N = 3;

      function Main() {
        _this.draw = __bind(_this.draw, this);

        _this.set_3 = __bind(_this.set_3, this);

        _this.set_2 = __bind(_this.set_2, this);

        _this.init = __bind(_this.init, this);
        this.init();
      }

      Main.prototype.init = function() {
        this.texture_w = texture.width;
        this.texture_h = texture.height;
        return this.set_3();
      };

      Main.prototype.set_2 = function() {
        this.p0 = {
          x: 50,
          y: 30
        };
        this.p1 = {
          x: 250,
          y: 50
        };
        this.p2 = {
          x: 420,
          y: 40
        };
        this.p3 = {
          x: 100,
          y: 200
        };
        this.p4 = {
          x: 230,
          y: 220
        };
        this.p5 = {
          x: 380,
          y: 250
        };
        this.p6 = {
          x: 100,
          y: 430
        };
        this.p7 = {
          x: 230,
          y: 400
        };
        this.p8 = {
          x: 400,
          y: 410
        };
        this.faces = [[0, 1, 3], [1, 3, 4], [1, 2, 4], [2, 4, 5], [3, 4, 6], [4, 6, 7], [4, 5, 7], [5, 7, 8]];
        return this.draw();
      };

      Main.prototype.set_3 = function() {
        this.p0 = {
          x: 50,
          y: 30
        };
        this.p1 = {
          x: 250,
          y: 50
        };
        this.p2 = {
          x: 320,
          y: 40
        };
        this.p3 = {
          x: 420,
          y: 40
        };
        this.p4 = {
          x: 100,
          y: 100
        };
        this.p5 = {
          x: 230,
          y: 120
        };
        this.p6 = {
          x: 280,
          y: 150
        };
        this.p7 = {
          x: 380,
          y: 130
        };
        this.p8 = {
          x: 100,
          y: 230
        };
        this.p9 = {
          x: 230,
          y: 200
        };
        this.p10 = {
          x: 300,
          y: 210
        };
        this.p11 = {
          x: 400,
          y: 210
        };
        this.p12 = {
          x: 50,
          y: 430
        };
        this.p13 = {
          x: 230,
          y: 400
        };
        this.p14 = {
          x: 300,
          y: 410
        };
        this.p15 = {
          x: 400,
          y: 410
        };
        this.faces = [[0, 1, 4], [1, 4, 5], [1, 2, 5], [2, 5, 6], [2, 3, 6], [3, 6, 7], [4, 5, 8], [5, 8, 9], [5, 6, 9], [6, 9, 10], [6, 7, 10], [7, 10, 11], [8, 9, 12], [9, 12, 13], [9, 10, 13], [10, 13, 14], [10, 11, 14], [11, 14, 15]];
        return this.draw();
      };

      Main.prototype.draw = function() {
        var dx, dy, face, h, i, m11, m12, m21, m22, p0, p1, p2, w, x, x_i, y, y_i, _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = this.faces.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          face = this.faces[i];
          x_i = (i % (this.HORIZONTAL_N * 2)) / 2 | 0;
          y_i = (i / (this.HORIZONTAL_N * 2)) | 0;
          p0 = this["p" + face[0]];
          p1 = this["p" + face[1]];
          p2 = this["p" + face[2]];
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(p0.x, p0.y);
          ctx.lineTo(p1.x, p1.y);
          ctx.lineTo(p2.x, p2.y);
          ctx.closePath();
          ctx.clip();
          if (i % 2 === 0) {
            dx = p0.x;
            dy = p0.y;
            m11 = (p1.x - p0.x) / this.texture_w;
            m12 = (p1.y - p0.y) / this.texture_w;
            m21 = (p2.x - p0.x) / this.texture_h;
            m22 = (p2.y - p0.y) / this.texture_h;
            x = -this.texture_w * x_i;
            y = -this.texture_h * y_i;
            w = this.texture_w * this.HORIZONTAL_N;
            h = this.texture_h * this.VERTICAL_N;
          } else {
            dx = p1.x;
            dy = p1.y;
            m11 = (p2.x - p1.x) / this.texture_w;
            m12 = (p2.y - p1.y) / this.texture_w;
            m21 = (p2.x - p0.x) / this.texture_h;
            m22 = (p2.y - p0.y) / this.texture_h;
            x = -this.texture_w * x_i;
            y = -this.texture_h * (y_i + 1);
            w = this.texture_w * this.HORIZONTAL_N;
            h = this.texture_h * this.VERTICAL_N;
          }
          ctx.setTransform(m11, m12, m21, m22, dx, dy);
          ctx.drawImage(texture, x, y, w, h);
          ctx.restore();
          if (DEBUG) {
            ctx.strokeStyle = "yellow";
            ctx.lineWidth = 2;
            _results.push(ctx.stroke());
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      return Main;

    })();
    texture.addEventListener("load", function() {
      return new Main();
    }, false);
    return texture.src = IMAGE_PATH;
  })(window, document);

}).call(this);
